name: Build, Test, and Deploy

on:
  workflow_dispatch: # Allows manual triggering
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Shared Variables
  DOTNET_VERSION: '9.0.x'
  # API Variables (now includes embedded Blazor WASM)
  API_PROJECT_PATH: 'PoSnakeGame.Api/PoSnakeGame.Api.csproj'
  AZURE_API_WEBAPP_NAME: posnakegame-api   # Name of the Azure App Service for API

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    outputs:
      api_publish_path: ${{ steps.publish_api.outputs.publish_path }} # Output path for API artifact

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true # Checkout submodules if any

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build Solution
      run: dotnet build --no-restore --configuration Release

    # - name: Run Tests
    #   run: dotnet test --no-build --verbosity detailed --configuration Release --collect:"XPlat Code Coverage" --logger "console;verbosity=detailed"

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      # Add with: token: ${{ secrets.CODECOV_TOKEN }} if needed

    - name: Publish Client Project (Blazor WASM)
      run: dotnet publish ${{ env.CLIENT_PROJECT_PATH }} --configuration Release --no-build --output ./client-publish

    - name: Publish API Project
      run: dotnet publish ${{ env.API_PROJECT_PATH }} --configuration Release --no-build --output ./api-publish

    - name: Deploy to Azure Static Web Apps
      uses: azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
        action: "upload"
        app_location: "/client-publish/wwwroot" # Folder containing the client-side code
        api_location: "/api-publish" # Folder containing the API code
        output_location: "" # Output location of the client-side code - leave empty for Blazor WASM
        # Skip the api_build_command and app_build_command as we are publishing separately
        api_build_command: "" 
        app_build_command: ""
