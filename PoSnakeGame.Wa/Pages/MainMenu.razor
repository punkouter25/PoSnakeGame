@page "/"
@using PoSnakeGame.Wa.Services
@using Microsoft.Extensions.Logging
@using System

<PageTitle>Snake Battle Royale</PageTitle>

<div class="main-menu">
    <h1 class="retro-title">SNAKE BATTLE ROYALE</h1>
    
    @if (!string.IsNullOrEmpty(HelloWorldMessage))
    {
        <div class="hello-world-message">
            <p>@HelloWorldMessage</p>
        </div>
    }
    
    <div class="menu-buttons">
        <button class="retro-button" @onclick="StartGame">START GAME</button>
        <button class="retro-button" @onclick="ViewHighScores">HIGH SCORES</button>
        <button class="retro-button" @onclick="ViewStatistics">STATISTICS</button>
    </div>
</div>

@code {
    private string HelloWorldMessage { get; set; } = string.Empty;
    private bool IsLoading { get; set; } = true;
    
    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;
    
    [Inject]
    private HelloWorldService HelloWorldService { get; set; } = default!;
    
    [Inject]
    private ILogger<MainMenu> Logger { get; set; } = default!;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Call the HelloWorld function when the main menu loads
            HelloWorldMessage = await HelloWorldService.GetHelloWorldMessageAsync();
            Logger.LogInformation($"Received message from HelloWorld function: {HelloWorldMessage}");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error calling HelloWorld function");
            HelloWorldMessage = "Error connecting to HelloWorld function";
        }
        finally
        {
            IsLoading = false;
        }
        
        await base.OnInitializedAsync();
    }
    
    private void StartGame()
    {
        NavigationManager.NavigateTo("/game");
    }

    private void ViewHighScores()
    {
        NavigationManager.NavigateTo("/highscores");
    }

    private void ViewStatistics()
    {
        NavigationManager.NavigateTo("/statistics");
    }
}
