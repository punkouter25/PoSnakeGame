@page "/statistics"
@using PoSnakeGame.Core.Models
@using PoSnakeGame.Wa.Services
@inject GameStatisticsService StatisticsService
@inject NavigationManager NavigationManager

<PageTitle>PoSnakeGame</PageTitle>

<link href="css/statistics.css" rel="stylesheet" />

<div class="statistics-container">
    <h1 class="retro-title">GAME STATISTICS</h1>
    
    @if (_loading)
    {
        <div class="loading-container">
            <div class="loading-content">
                <div class="loading-spinner"></div>
                <div class="loading-text">Loading statistics...</div>
            </div>
        </div>
    }
    else if (_error)
    {
        <div class="error">
            <p>Error loading statistics. Please try again later.</p>
            <button class="retro-button" @onclick="LoadStatistics">RETRY</button>
        </div>
    }
    else
    {
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-title">Total Games</div>
                <div class="stat-value">@_stats.GetValueOrDefault("totalGames", 0)</div>
            </div>
            <div class="stat-card">
                <div class="stat-title">Average Score</div>
                <div class="stat-value">@_stats.GetValueOrDefault("averageScore", 0)</div>
            </div>
            <div class="stat-card">
                <div class="stat-title">Highest Score</div>
                <div class="stat-value">@_stats.GetValueOrDefault("highestScore", 0)</div>
            </div>
            <div class="stat-card">
                <div class="stat-title">Food Eaten</div>
                <div class="stat-value">@_stats.GetValueOrDefault("totalFoodEaten", 0)</div>
            </div>
            <div class="stat-card">
                <div class="stat-title">Longest Snake</div>
                <div class="stat-value">@_stats.GetValueOrDefault("longestSnake", 0) segments</div>
            </div>
            <div class="stat-card">
                <div class="stat-title">Total Play Time</div>
                <div class="stat-value">@_stats.GetValueOrDefault("totalPlaytime", 0) min</div>
            </div>
        </div>
    }
    
    <div class="buttons">
        <button class="retro-button" @onclick="NavigateToMainMenu">MAIN MENU</button>
        <button class="retro-button" @onclick="NavigateToGame">PLAY GAME</button>
    </div>
</div>

@code {
    private bool _loading = true;
    private bool _error = false;
    private Dictionary<string, int> _stats = new();
    
    protected override async Task OnInitializedAsync()
    {
        await LoadStatisticsQuietly();
    }
    
    private async Task LoadStatisticsQuietly()
    {
        try
        {
            _stats = await StatisticsService.GetStatisticsAsync();
        }
        catch (Exception ex)
        {
            _error = true;
            Console.WriteLine($"Error loading statistics: {ex.Message}");
        }
        finally
        {
            _loading = false;
            StateHasChanged();
        }
    }
    
    private async Task LoadStatistics()
    {
        try
        {
            _loading = true;
            _error = false;
            StateHasChanged();
            
            _stats = await StatisticsService.GetStatisticsAsync();
        }
        catch (Exception ex)
        {
            _error = true;
            Console.WriteLine($"Error loading statistics: {ex.Message}");
        }
        finally
        {
            _loading = false;
            StateHasChanged();
        }
    }
    
    private void NavigateToMainMenu()
    {
        NavigationManager.NavigateTo("/");
    }
    
    private void NavigateToGame()
    {
        NavigationManager.NavigateTo("/game");
    }
}